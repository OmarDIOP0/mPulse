---
// src/components/HardwareCard.astro
const { title, description, price, image, features = [], badge } = Astro.props;
---

<div class="bg-white rounded-xl shadow-md overflow-hidden hover:shadow-lg transition-shadow duration-300 h-full flex flex-col">
    <div class="relative pt-[60%] overflow-hidden">
        <img src={image} alt={title} class="absolute top-0 left-0 w-full h-full object-cover transition-transform duration-500 hover:scale-105" />
        {badge && (
            <span class="absolute top-4 right-4 bg-[#ffd100] text-[#00377d] font-bold px-3 py-1 rounded-full text-xs">
                {badge}
            </span>
        )}
    </div>
    
    <div class="p-6 flex-1 flex flex-col">
        <h3 class="text-xl font-bold text-gray-900 mb-2">{title}</h3>
        <p class="text-gray-600 mb-4">{description}</p>
        
        {features.length > 0 && (
            <ul class="mb-6 space-y-2">
                {features.map((feature: string) => (
                    <li class="flex items-center text-gray-700">
                        <svg class="w-4 h-4 mr-2 text-[#0056b3] flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                        </svg>
                        {feature}
                    </li>
                ))}
            </ul>
        )}
        
        <div class="mt-auto">
            <p class="text-lg font-bold text-[#00377d] mb-4">{price}</p>
            <a href="#" class="block text-center bg-[#0056b3] text-white font-semibold px-6 py-2 rounded-lg hover:bg-[#00377d] transition-colors duration-300">
                Commander
            </a>
        </div>
    </div>
</div>