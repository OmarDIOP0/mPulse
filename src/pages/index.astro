---
// src/pages/index.astro
import Layout from '../layouts/Layout.astro';
import Hero from '../components/Hero.astro';
import FeatureCard from '../components/FeatureCard.astro';
import Testimonial from '../components/Testimonial.astro';
import CTA from '../components/CTA.astro';
import Dashboard from '../assets/icons/dashboardF.png';
import Stock from '../assets/icons/stock.jpg';
import Performance from '../assets/icons/performance.jpg';
import ScreenDashboard from '../assets/app/dashboard.jpg';
import ScreenAutre from '../assets/app/autre.jpg';
import ScreenCaisse from '../assets/app/caisse.jpg';
import ScreenDepense from '../assets/app/depense.jpg';
import ScreenEcommerce from '../assets/app/ecommerce1.jpg';
import Solution from './solution.astro';
import Materiel from './materiel.astro';
import Tarifs from './pricing.astro';
import Apropos from './about.astro';
import Contact from './contact.astro';
import Fonctionnalites from './features.astro';
import FAQ from '../components/FAQ.astro';
---
<Layout title="Accueil">
    <Hero />
      <!-- Section Solutions -->
<section id="fonctionnalites" class="py-10 bg-gray-50">
    <div class="container mx-auto px-6">
        <!-- Contenu de la section solutions -->
        <Fonctionnalites />
    </div>
</section>
<!-- Section Solutions -->
<section id="solutions" class="py-10 bg-gray-50">
    <div class="container mx-auto px-6">
        <!-- Contenu de la section solutions -->
        <Solution />
    </div>
</section>

<!-- Section Matériel -->
<section id="materiel" class="py-10 bg-white">
    <div class="container mx-auto px-6">
        <!-- Contenu de la section matériel -->
        <Materiel />
    </div>
</section>

<!-- Section Tarifs -->
<section id="tarifs" class="py-10 bg-gray-50">
    <div class="container mx-auto px-6">
        <!-- Contenu de la section tarifs -->
        <Tarifs />
    </div>
</section>

<!-- Section À propos -->
<section id="apropos" class="py-10 bg-white">
    <div class="container mx-auto px-6">
        <!-- Contenu de la section à propos -->
        <Apropos />
    </div>
</section>

<!-- Section Contact (si nécessaire) -->
<section id="contact" class="">
    <div class="container mx-auto">
        <!-- Contenu de la section contact -->
        <Contact />
    </div>
</section>

     <!--Fin ajout -->
     <section id="contact" class="py-10 bg-white">
    <div class="container mx-auto">
        <!-- Contenu de la section contact -->
            <FAQ/>
    </div>
</section>
   <!-- Section Chiffres clés -->
    <section class="py-20 bg-gradient-to-br from-[#00377d] to-[#0066cc] text-white">
        <div class="container mx-auto px-6">
            <div class="text-center max-w-3xl mx-auto mb-16">
                <h2 class="text-3xl md:text-4xl font-bold mb-4">mPulse en chiffres</h2>
                <p class="text-lg opacity-90">
                    La solution préférée des commerçants et entrepreneurs au Sénégal
                </p>
            </div>
            
           <div class="grid grid-cols-2 md:grid-cols-4 gap-8">
    <!-- Chiffre 1 -->
    <div class="text-center animate-slideUp opacity-0 [animation-fill-mode:forwards]">
        <div class="text-4xl md:text-5xl font-bold mb-3" data-count="100">0</div>
        <div class="text-lg opacity-90">Utilisateurs actifs</div>
    </div>
    
    <!-- Chiffre 2 -->
    <div class="text-center animate-slideUp opacity-0 [animation-fill-mode:forwards] delay-100">
        <div class="text-4xl md:text-5xl font-bold mb-3" data-count="500">0</div>
        <div class="text-lg opacity-90">FCFA échangés (en milliers)</div>
    </div>
    
    <!-- Chiffre 3 -->
    <div class="text-center animate-slideUp opacity-0 [animation-fill-mode:forwards] delay-200">
        <div class="text-4xl md:text-5xl font-bold mb-3">24/7</div>
        <div class="text-lg opacity-90">Disponibilité</div>
    </div>
    
    <!-- Chiffre 4 -->
    <div class="text-center animate-slideUp opacity-0 [animation-fill-mode:forwards] delay-300">
        <div class="text-4xl md:text-5xl font-bold mb-3" data-count="95">0</div>
        <div class="text-lg opacity-90">Satisfaction clients</div>
    </div>
</div>
            
            <!-- Bouton CTA -->
    <div class="text-center mt-16">
        <a href="#" class="inline-flex items-center px-8 py-4 bg-[#ffd100] hover:bg-secondary/90 text-white font-bold rounded-full transition-all transform hover:scale-105">
            <span>Démarrer avec mPulse</span>
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 ml-2" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M10.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L12.586 11H5a1 1 0 110-2h7.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd" />
            </svg>
        </a>
    </div>
</div>
</section>
    <CTA />
</Layout>

 <script>
    // Gestion des onglets
    document.querySelectorAll('[data-tab]').forEach(tab => {
        tab.addEventListener('click', () => {
            // Désactive tous les onglets
            document.querySelectorAll('[data-tab]').forEach(t => {
                t.classList.remove('border-primary', 'text-primary');
                t.classList.add('text-gray-500');
            });
            
            // Active l'onglet cliqué
            tab.classList.add('border-primary', 'text-primary');
            tab.classList.remove('text-gray-500');
            
            // Cache tous les contenus
            document.querySelectorAll('[data-tab-content]').forEach(content => {
                content.classList.add('hidden');
            });
            
            // Affiche le contenu correspondant
            const tabName = tab.getAttribute('data-tab');
            const tabContent = document.querySelector(`[data-tab-content="${tabName}"]`);
            if (tabContent) {
                tabContent.classList.remove('hidden');
            }
        });
    });

    // Gestion du carousel
    document.querySelectorAll('[data-slide-target]').forEach(button => {
        button.addEventListener('click', () => {
            // Désactive tous les boutons
            document.querySelectorAll('[data-slide-target]').forEach(btn => {
                btn.classList.remove('bg-primary', 'text-white');
                btn.classList.add('text-gray-600', 'hover:text-primary');
            });
            
            // Active le bouton cliqué
            button.classList.add('bg-primary', 'text-white');
            button.classList.remove('text-gray-600', 'hover:text-primary');
            
            // Cache toutes les slides
            document.querySelectorAll('.carousel-item').forEach(slide => {
                slide.classList.add('hidden');
            });
            
            // Affiche la slide correspondante
            const slideName = button.getAttribute('data-slide-target');
            const slideElem = document.querySelector(`[data-slide="${slideName}"]`);
            if (slideElem) {
                slideElem.classList.remove('hidden');
            }
        });
    });

    // Mise à jour de l'heure
    function updateTime() {
        const now = new Date();
        const updateTimeElem = document.getElementById('update-time');
        if (updateTimeElem) {
            updateTimeElem.textContent = now.toLocaleString();
        }
    }
    updateTime();
    setInterval(updateTime, 1000);
    </script>
    <script is:inline>
document.addEventListener('DOMContentLoaded', () => {
    const animateCounters = () => {
        const counters = document.querySelectorAll('[data-count]');
        const speed = 1000; 
        const frameDuration = 1000 / 60; 
        
        counters.forEach(counter => {
            const target = parseInt(counter.getAttribute('data-count'));
            const countTo = target;
            let count = 0;
            const frames = Math.min(Math.floor(speed / frameDuration), countTo);
            const increment = countTo / frames;
            
            const updateCount = () => {
                count += increment;
                if (count < countTo) {
                    counter.textContent = Math.ceil(count) + (counter.getAttribute('data-count') === '500' ? 'K+' : '+');
                    requestAnimationFrame(updateCount);
                } else {
                    counter.textContent = countTo + (counter.getAttribute('data-count') === '500' ? 'K+' : '+');
                }
            };
            
            // Déclenchement avec Intersection Observer
            const observer = new IntersectionObserver((entries) => {
                if (entries[0].isIntersecting) {
                    updateCount();
                    observer.unobserve(counter);
                }
            }, { threshold: 0.5 });
            
            observer.observe(counter);
        });
    };
    
    animateCounters();
});
</script>